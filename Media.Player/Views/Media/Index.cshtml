@{
    ViewData["Title"] = "Rebmem";
}

@model MediaModel;

<button id="btnSync" class="media-options" data-toggle="modal" data-target="#uploadModal">
    <div class="media-ellipsis"></div>
</button>
<div style="float:right;">
    <p>Rebmem&reg;</p>
</div>

<a href="#" v-on:click.prevent="getPlaylist">Get playlist</a>

<div v-for="item in playlist">
    <a href="#" v-on:click.prevent="loadMedia(item)">Get song</a>
    {{ item.fileName }}
    <hr />
</div>

<div class="media-player center-block">
    <div>
        <video ref="mediaPlayer" :src="currentMediaMeta.mediaUrl">
            Your browser does not support HTML5 video.
        </video>
    </div>
</div>

@*<div class="media-footer">
        <div class="container-fluid">
            <div class="control-housing">
                <div class="col-xs-5">
                    <div class="media-info" style="border: 1px solid red; background-color: antiquewhite; border-radius:2px;">
                        <div id="TrackTitle" style="border-bottom: 1px solid red;">
                            Track
                        </div>
                        <div id="TrackInformation">
                            Info
                        </div>
                        <div id="TrackImage">
                            Image
                        </div>
                    </div>
                </div>
                <div id="controls" class="col-xs-7">
                    <div class="media-buttons">
                        <button id="btnPlay" class="play glyphicon glyphicon-play" title="play" value="play" onclick="playMedia();"></button>
                        <button id="btnPause" class="pause glyphicon glyphicon-pause" title="pause" value="pause" onclick="pauseMedia();"></button>
                        <button id="btnStop" class="stop glyphicon glyphicon-stop" title="stop" onclick="stopMedia();"></button>
                        <button id="btnRwd" class="rewind glyphicon glyphicon-fast-backward" title="rewind" onclick="rwdMedia();"></button>
                        <button id="btnFwd" class="forward glyphicon glyphicon-fast-forward" title="forward" onclick="fwdMedia();"></button>
                    </div>
                    <div class="media-progess">
                        <progress id="progressBar" min="0" max="100" value="0">0% played</progress>
                    </div>
                </div>
            </div>
        </div>
    </div>*@

<div>
    <h1>Current song: {{ currentMediaMeta.fileName ? currentMediaMeta.fileName : 'None' }}</h1>
</div>

<div id="mediaPlayerControls">
    <div class="media-buttons">
        <button class="glyphicon" v-bind:class="isPlaying ? 'glyphicon-pause' : 'glyphicon-play'" title="play" value="play" v-on:click.prevent="playPause"></button>
        <button class="stop glyphicon glyphicon-stop" title="stop" v-on:click.prevent="stop"></button>
        <button class="rewind glyphicon glyphicon-fast-backward" title="rewind" v-on:click.prevent="rewind"></button>
        <button class="forward glyphicon glyphicon-fast-forward" title="forward" v-on:click.prevent="forward"></button>
    </div>
    <div class="media-progess">
        <progress ref="progressBar" min="0" max="100" :value="percentagePlayed">{{ percentagePlayed }}% played</progress>
    </div>
</div>

<div id="uploadModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <form asp-action="UploadFile" asp-controller="Media" method="post" enctype="multipart/form-data">
            <div class="upload-input">
                <input type="text" name="information" />
                <input type="text" name="mediaArtUrl" />
                <input class="upload-file" type="file" name="file" />
                <button class="upload-button" type="submit">Upload</button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        var vm = new Vue({
            el: '#main',
            data: {
                playlist: [],
                currentMediaMeta: {},
                isPlaying: false,
                percentagePlayed: 0
            },
            methods: {
                loadMedia(mediaMeta) {
                    this.stop();

                    this.currentMediaMeta = mediaMeta;
                },
                playPause() {
                    if (!this.currentMediaMeta.fileName) {
                        return;
                    }

                    if (!this.isPlaying) {
                        this.$refs.mediaPlayer.play();
                    } else {
                        this.$refs.mediaPlayer.pause();                        
                    }

                    this.isPlaying = !this.isPlaying;
                },
                stop() {
                    var mPlayer = this.$refs.mediaPlayer;

                    mPlayer.pause();
                    mPlayer.currentTime = 0;

                    this.currentMediaMeta = {};
                    mPlayer.load();

                    this.isPlaying = false;
                },
                rewind() {
                    // if currenttime is less than 0 or 1 then previous track else this
                    this.$refs.mediaPlayer.currentTime = 0;
                },
                forward() {
                    if (this.currentMediaMeta == null) {
                        this.loadMedia(this.playlist[0]);
                    } else {
                        for (var i = 0; i < this.playlist.length; i++) {
                            var mm = this.playlist[i];

                            if (mm.mediaMetadataId === this.currentMediaMeta.mediaMetadataId) {
                                if (i === this.playlist.length - 1) {
                                    this.loadMedia(this.playlist[0]);
                                    break;
                                } else {
                                    this.loadMedia(this.playlist[i + 1]);
                                    break;
                                }
                            }
                        }
                    }
                    // maybe play media here
                },
                getPlaylist() {
                    $.ajax({
                        url: '/media/getallmedia',
                        success: (result) => {
                            this.playlist = result;
                        }
                    })
                },
                updateProgressBar() {
                    var mPlayer = this.$refs.mediaPlayer;

                    if (!mPlayer.duration && !mPlayer.currentTime) {
                        this.percentagePlayed = 0;
                        return;
                    }

                    this.percentagePlayed = Math.floor((100 / mPlayer.duration) * mPlayer.currentTime);
                }
            },
            mounted() {
                this.$refs.mediaPlayer.addEventListener('timeupdate', this.updateProgressBar, false);
            }
        })
    </script>
}
